plugins {
    id 'application'
    id 'maven-publish'
    id 'net.researchgate.release' version '2.6.0'
    id "com.jfrog.bintray" version "1.8.4"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

project.group = "org.clyze"

applicationName = project.name
mainClassName = 'org.clyze.scanner.Main'

wrapper {
    gradleVersion = '5.4.1'
}

repositories {
    mavenCentral()
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.2')
}

jar {
    manifest {
        attributes 'Implementation-Version' : archiveVersion
    }
}

test {
    useJUnitPlatform()
    maxHeapSize = '1G'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact tasks.sourcesJar
            artifact tasks.javadocJar
        }
    }
}
if (project.hasProperty('artifactory_user')) {
publishing {
    repositories {
        maven {
            credentials {
                username artifactory_user
                password artifactory_password
            }
            //Always publish to the public releases repo
            url "${artifactory_contextUrl}/libs-public-release-local"
        }
    }
}
}

release {
    // Use defaults, see https://github.com/researchgate/gradle-release
}

afterReleaseBuild.dependsOn publish

// Upload to bintray with:
//   ./gradlew clean build bintrayUpload --info
// Needs properties: bintray_user, bintray_key.
if (project.hasProperty('bintray_user') && project.hasProperty('bintray_key')) {
    bintray {
        user = bintray_user
        key = bintray_key
        publications = ['mavenJava']
        configurations = ['archives']
        pkg {
            repo = 'plast-lab'
            name = 'native-scanner'
            desc = 'Native code scanner for Java programs using JNI.'
            licenses = ['UPL-1.0']
            labels = ['java', 'jni']
            vcsUrl = 'https://github.com/plast-lab/native-scanner.git'
            version {
                name = project.version
                released = new Date()
                vcsTag = project.version
            }
        }
    }
}

